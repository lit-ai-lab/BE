"""keyword generate

Revision ID: d08f493b965e
Revises: 87884101140c
Create Date: 2025-07-14 10:16:14.029332

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd08f493b965e'
down_revision: Union[str, Sequence[str], None] = '87884101140c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_audit_types_id'), 'audit_types', ['id'], unique=False)
    op.create_table('categorys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_categorys_id'), 'categorys', ['id'], unique=False)
    op.create_table('map_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('subregion', sa.String(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_map_statistics_id'), 'map_statistics', ['id'], unique=False)
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parentId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parentId'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_regions_id'), 'regions', ['id'], unique=False)
    op.create_table('special_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_special_cases_id'), 'special_cases', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('agencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('regionId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['regionId'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_agencies_id'), 'agencies', ['id'], unique=False)
    op.create_table('viewer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('caseUuid', sa.String(), nullable=False),
    sa.Column('agencyId', sa.Integer(), nullable=False),
    sa.Column('relatedAgencyId', sa.Integer(), nullable=True),
    sa.Column('regionId', sa.Integer(), nullable=True),
    sa.Column('auditTypeId', sa.Integer(), nullable=False),
    sa.Column('taskId', sa.Integer(), nullable=False),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.Column('specialCaseId', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('originalText', sa.Text(), nullable=True),
    sa.Column('analysisText', sa.Text(), nullable=True),
    sa.Column('hwpPath', sa.String(), nullable=True),
    sa.Column('keyword', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['agencyId'], ['agencies.id'], ),
    sa.ForeignKeyConstraint(['auditTypeId'], ['audit_types.id'], ),
    sa.ForeignKeyConstraint(['categoryId'], ['categorys.id'], ),
    sa.ForeignKeyConstraint(['regionId'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['relatedAgencyId'], ['agencies.id'], ),
    sa.ForeignKeyConstraint(['specialCaseId'], ['special_cases.id'], ),
    sa.ForeignKeyConstraint(['taskId'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_viewer_caseUuid'), 'viewer', ['caseUuid'], unique=True)
    op.create_index(op.f('ix_viewer_id'), 'viewer', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_viewer_id'), table_name='viewer')
    op.drop_index(op.f('ix_viewer_caseUuid'), table_name='viewer')
    op.drop_table('viewer')
    op.drop_index(op.f('ix_agencies_id'), table_name='agencies')
    op.drop_table('agencies')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_special_cases_id'), table_name='special_cases')
    op.drop_table('special_cases')
    op.drop_index(op.f('ix_regions_id'), table_name='regions')
    op.drop_table('regions')
    op.drop_index(op.f('ix_map_statistics_id'), table_name='map_statistics')
    op.drop_table('map_statistics')
    op.drop_index(op.f('ix_categorys_id'), table_name='categorys')
    op.drop_table('categorys')
    op.drop_index(op.f('ix_audit_types_id'), table_name='audit_types')
    op.drop_table('audit_types')
    # ### end Alembic commands ###
